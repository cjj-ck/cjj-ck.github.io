[{"content":"暴力破解\n穷举\n开启服务 查看本机开启的端口\n netstat -natp\n 启动ssh服务\n sudo /etc/init.d/ssh start\n 账户操作 登录一个账户\n ssh kali\nssh kali@127.0.0.1 根据提示输入密码\n 添加账户\n sudo su\nuseradd newuser\n 给账户设置密码\n passwd newuser\n new password:密码\nRetype new password:再次输入密码\n  查看有哪些用户登录本机\n who\n 开始破解 查看字典库\n cat usr/share/wordlist/dirb/small.txt\n 将字典库的密码拷贝出来\n cp usr/share/wordlist/dirb/small.txt small.txt\n 爆破工具hydra\nhydra -l kali -P small.txt ssh://kali -t 4 -v  -l 用户名 -P 密码字典 -x 设置范围 3:5:a 密码长度从3试到5 ssh://kali ssh方式连接，kali这里可以为IP地址，代表要破解的主机 如ssh://192.168.#.#:1234 -v 显示破解过程 -t 用4个线程同时 -R 继续上次的进度执行 -I 不继续上次进度从头开始执行  ","date":"2021-04-26T22:05:38+08:00","image":"https://cjj-ck.github.io/p/hydra%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image_hu4cb1fc5fb76100460d8f8e366c4171c3_137941_120x120_fill_box_smart1_2.png","permalink":"https://cjj-ck.github.io/p/hydra%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/","title":"hydra暴力破解"},{"content":"  本地安装git\n去git官网下载git软件，安装过程无脑下一步就行\n安装成功后在鼠标右击目录下会多出两项\n\r\nGit GUI：图形界面的Git，不建议初学者使用，尽量先熟悉常用命令\n**Git Bash：**Unix与Linux风格的命令行，使用最多，推荐最多\n  设置用户名和邮箱\n你需要告诉本地git软件，你是一个有用户名、有邮箱的合法用户，若不设置，commit时会阻止提交到本地仓库\ngit config --global user.name \u0026#34;用户\u0026#34; git config --global user.email 邮箱   搭建仓库\n有两种方式：\n  搭建本地仓库\n新建一个文件夹，作为本地仓库，即工作目录，右击选择==Git Bash Here==，执行初始化命令\ngit init   克隆远程仓库\n将远程服务器上的仓库完全镜像一份至本地\ngit clone [url]     使用码云\n生成公钥\n 进入用户文件夹，比如 C:\\Users\\Administrator，找到.ssh文件夹 进入.ssh文件夹，文件夹内右击选择Git Bash Here 执行 ssh-keygen 生成公钥，此时文件夹内会生成两个文件id_rsa和id_rsa.pub  设置公钥\n 打开设置  \r\n  进入SSH公钥选项\n\r\n  将刚刚生成的id_rsa.pub文件里的公钥复制到这里\n\r\n    关联远程仓库\ngit remote add gitee https://gitee.com/code_from_cjj/pycode.git 命令解析\nremote add: 添加远程仓库\ngitee ：给远程仓库起个名称叫gitee\nhttps://gitee.com/code_from_cjj/pycode.git：远程仓库的地址\n  后续操作\n以上操作完成后，在此工作目录下的改动都可以提交到本地或者远程的仓库中了\n  添加到暂存区\n\r\n  提交到本地仓库\n\r\n  提交到远程仓库\n\r\n    ","date":"2021-04-26T21:28:38+08:00","image":"https://cjj-ck.github.io/p/git%E6%93%8D%E4%BD%9C/index_hu15178abcc99e7f0d39fea70d947db705_25539_120x120_fill_box_smart1_2.png","permalink":"https://cjj-ck.github.io/p/git%E6%93%8D%E4%BD%9C/","title":"git操作"},{"content":"虚拟机桥接模式 桥接模式就是将主机网卡与虚拟机的网卡利用虚拟网桥进行通信。\n在桥接的作用下，类似于把物理主机虚拟为一个交换机，所有桥接设置的虚拟机连接到这个交换机的一个接口上，物理主机也同样插在这个交换机当中，所以所有桥接下的网卡与网卡都是交换模式的，相互可以访问而不干扰。\n在桥接模式下，虚拟机ip地址需要与主机在同一个网段，如果需要联网，则网关与DNS需要与主机网卡一致\n桥接模式配置 查看需要桥接的网卡   右击右下角网络图标点击打开网络和Internet设置\r1\r\n  下滑找到查看网络属性\r2\r\n  找到正在使用的网卡\n比如我现在正在使用无线网络，到这里找到有关于此网络的信息，包括我们现在要找的无线网卡名称\n\r3\r\n  设置桥接网卡 打开vmware，点击编辑、虚拟网络编辑器，将桥接的网卡设置成刚刚查看到的网卡\n\r4\r\n注：若系统账户不是Administrator，会提示权限不够，打开VMware时右击以管理员身份运行就可以了\n虚拟机内部网IP配置 以Ubuntu20.04为例\n 点击右上角的网络图标、有线、有线设置  \r\n 在有线一栏点击齿轮、IPV4\n\r\n  开始配置IP\n IPV4方式：手动 地址：  地址：设置成与宿主机同一网段下的其他IP地址 子网掩码：与宿主机保持一致 网关：与宿主机保持一致   DNS：与宿主机保持一致 路由：自动就好    校园网的桥接问题 如果宿主机连接的是类似校园网这种需要认证的网络时，会有如下问题：\n  设置虚拟机内的IP地址时，除了宿主机的IP地址，其他的地址均无法上网\n  如果虚拟机设置成宿主机一样的IP，会导致宿主机无法正常连接网络\n  造成这种现象的原因是：虚拟机桥接网络时，这个虚拟机就相当于连接校园网的另一台主机，这台主机也需要像宿主机一样通过认证才允许连接网络\n我的解决办法是，让手机连接校园网的同时开启热点，让宿主机连接手机热点，这样便能正常进行桥接了\n","date":"2021-04-25T22:58:38+08:00","image":"https://cjj-ck.github.io/p/%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/index_hu2d67d7de06703bec5bb28165f3242d01_51442_120x120_fill_q75_box_smart1.jpg","permalink":"https://cjj-ck.github.io/p/%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/","title":"桥接模式"},{"content":"换源   打开kali的终端\n\r1\r\n  编辑软件源，输入\nsudo vi /etc/apt/sources.list \r2\r\n  如果是非root的普通账户，会提示需要输入登录密码（2020版本后的默认用户kali也是普通用户），输入密码后回车进入软件源页面\n\r3\r\n  点击键入 i 进入编辑模式（此时窗口左下角会显示INSERT或插入），注释掉官方源\n\r4\r\n  添加国内源\n阿里云：\ndeb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib deb http://mirrors.aliyun.com/kali-security kali-rolling/updates main contrib non-free 中科大：\ndeb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib \r5\r\n  按Esc退出编辑模式，然后输入:wq（保存并退出），回车\n\r6\r\n  至此，换源操作已完成\n更新软件和软件源   输入sudo apt-get dist-upgrade进行软件源清单更新，输入密码后回车\n\r7\r\n  输入sudo apt-get update，进行软件版本更新\n\r8\r\n  更新完成后再输入sudo apt-get upgrade进行更新\n\r9\r\n此时输入y回车即可\n  第一次更新时间比较长，耐心等待更新完成，就可以开始kali的渗透之旅了\n","date":"2021-04-24T22:38:06+08:00","image":"https://cjj-ck.github.io/p/linux%E6%8D%A2%E6%BA%90/index_hu43e51c4064de8073a7912df9d256b142_21327_120x120_fill_q75_box_smart1.jpg","permalink":"https://cjj-ck.github.io/p/linux%E6%8D%A2%E6%BA%90/","title":"linux换源"},{"content":"环境部署   安装git\nsudo apt-get install git   安装hugo\nsudo apt-get install hugo   项目搭建   创建hugo 项目\nhugo new site myblog 注：\n myblog为创建的hugo项目的根目录名称    克隆一个主题\ncd myblog git clone https://github.com/vaga/hugo-theme-m10c.git themes/m10c 注：\n 如果cd到项目根目录，clone的地址后面需加上路径 “themes/主题名” 如果cd到themes目录，直接git clone 地址    新建一个博客\nhugo new post/blog.md 注：\n 在post目录下新建一个名为blog.md的博客文件 .md为Markdown格式的文件    修改配置文件\nbaseURL = \u0026quot;https://tian_828.gitee.io/\u0026quot;\rlanguageCode = \u0026quot;zh-cn\u0026quot;\rtitle = \u0026quot;靖哥的博客\u0026quot;\rtheme = \u0026quot;m10c\u0026quot;\r注：\n baseURL：需要部署到云端的地址 languageCode：语言，英文为en，中文为zh-cn title：标题，浏览器标签栏将会显示的内容 theme：此项目所使用的主题的名称，必须与themes目录下的主题文件夹的名称一致    编译\nhugo -D 注：\n 此操作将整个项目编译成能够在浏览器显示的网页 编译后会生成一个public文件夹，里面便是博客网页相关的文件    本地启动\nhugo server -D 或\nhugo server -t m10c --buildDrafts 注：\n  -t：主题，themes文件夹下的主题文件夹名称\n  指定地址：\nhugo --theme=m10c --baseURL=\u0026#34;https://cjj.github.io\u0026#34; --buildDrafts     部署到码云或GitHub   将生成public文件夹的内容推到远程仓库\ncd public/ git init git commit -m \u0026#34; \u0026#34; git remote add blog https://gitee.com/code_from_cjj/blog.git git push -u blog master   或者直接将整个项目目录推到远程仓库\ncd myblog cd .. git init git commit -m \u0026#34; \u0026#34; git remote add blog https://gitee.com/code_from_cjj/blog.git git push -u blog master   注：\n  第二种方式在部署的时候部署目录一定要到达public文件夹，如：\n/myblog/public\n  第一种方式无需设置部署目录，默认就好\n  ","date":"2021-04-24T21:05:28+08:00","image":"https://cjj-ck.github.io/p/hugo/hugo_hue75e5db0bb1bfcf964e064a839d1440c_35355_120x120_fill_q75_box_smart1.jpg","permalink":"https://cjj-ck.github.io/p/hugo/","title":"Hugo"}]